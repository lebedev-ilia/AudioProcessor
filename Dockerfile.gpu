# ===== GPU версия AudioProcessor =====

# ===== Stage 1: Build stage =====
FROM nvidia/cuda:12.1-devel-ubuntu22.04 as builder

# Установка Python и системных зависимостей для сборки
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.12 \
    python3.12-dev \
    python3.12-venv \
    python3-pip \
    build-essential \
    gcc \
    g++ \
    git \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Создание символической ссылки для python
RUN ln -s /usr/bin/python3.12 /usr/bin/python

# Создание виртуального окружения
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Копирование и установка зависимостей
COPY requirements.txt .
RUN pip install --upgrade pip setuptools wheel \
    && pip install --no-cache-dir -r requirements.txt

# ===== Stage 2: Runtime stage =====
FROM nvidia/cuda:12.1-runtime-ubuntu22.04 as runtime

# Установка Python и runtime зависимостей
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.12 \
    python3.12-venv \
    ffmpeg \
    libsndfile1 \
    libasound2-dev \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Создание символической ссылки для python
RUN ln -s /usr/bin/python3.12 /usr/bin/python

# Копирование виртуального окружения из builder stage
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Создание непривилегированного пользователя
RUN useradd --create-home --shell /bin/bash audio_processor

# Настройка рабочей директории
WORKDIR /app

# Копирование исходного кода
COPY src/ /app/src/

# Копирование тестовых скриптов
COPY test_*.py /app/
COPY view_results.py /app/

# Настройка окружения для GPU
ENV PYTHONPATH=/app
ENV CELERY_BROKER_URL=redis://redis:6379/0
ENV CELERY_RESULT_BACKEND=redis://redis:6379/0
ENV TRANSFORMERS_CACHE=/app/.cache
ENV TORCH_HOME=/app/.cache/torch
ENV CUDA_HOME=/usr/local/cuda
ENV CUDA_VISIBLE_DEVICES=0
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Создание директорий и настройка прав
RUN mkdir -p /app/logs /app/.cache \
    && chown -R audio_processor:audio_processor /app

# Healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Переключение на безопасного пользователя
USER audio_processor

# Команда по умолчанию
CMD ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000"]
