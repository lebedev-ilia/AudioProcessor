# ===== Docker Makefile –¥–ª—è AudioProcessor =====

.PHONY: help build build-gpu up up-gpu down logs clean test-docker

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
DOCKER_COMPOSE = docker-compose
DOCKER_COMPOSE_GPU = docker-compose -f docker-compose.gpu.yml
IMAGE_NAME = audio-processor
TAG = latest

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

# ===== –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ =====
build: ## –°–æ–±—Ä–∞—Ç—å CPU –æ–±—Ä–∞–∑
	@echo "üî® –°–±–æ—Ä–∫–∞ CPU –æ–±—Ä–∞–∑–∞..."
	$(DOCKER_COMPOSE) build --no-cache

build-gpu: ## –°–æ–±—Ä–∞—Ç—å GPU –æ–±—Ä–∞–∑
	@echo "üî® –°–±–æ—Ä–∫–∞ GPU –æ–±—Ä–∞–∑–∞..."
	$(DOCKER_COMPOSE_GPU) build --no-cache

build-all: build build-gpu ## –°–æ–±—Ä–∞—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã

# ===== –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ =====
up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å CPU –≤–µ—Ä—Å–∏—é
	@echo "üöÄ –ó–∞–ø—É—Å–∫ CPU –≤–µ—Ä—Å–∏–∏..."
	$(DOCKER_COMPOSE) up -d

up-gpu: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å GPU –≤–µ—Ä—Å–∏—é
	@echo "üöÄ –ó–∞–ø—É—Å–∫ GPU –≤–µ—Ä—Å–∏–∏..."
	$(DOCKER_COMPOSE_GPU) up -d

up-build: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π
	@echo "üöÄ –ó–∞–ø—É—Å–∫ —Å –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π..."
	$(DOCKER_COMPOSE) up -d --build

up-gpu-build: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å GPU –≤–µ—Ä—Å–∏—é —Å –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π
	@echo "üöÄ –ó–∞–ø—É—Å–∫ GPU –≤–µ—Ä—Å–∏–∏ —Å –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π..."
	$(DOCKER_COMPOSE_GPU) up -d --build

# ===== –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ =====
down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å CPU –≤–µ—Ä—Å–∏—é
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ CPU –≤–µ—Ä—Å–∏–∏..."
	$(DOCKER_COMPOSE) down

down-gpu: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å GPU –≤–µ—Ä—Å–∏—é
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ GPU –≤–µ—Ä—Å–∏–∏..."
	$(DOCKER_COMPOSE_GPU) down

down-all: down down-gpu ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –≤–µ—Ä—Å–∏–∏

# ===== –õ–æ–≥–∏ =====
logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ CPU –≤–µ—Ä—Å–∏–∏
	$(DOCKER_COMPOSE) logs -f

logs-gpu: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ GPU –≤–µ—Ä—Å–∏–∏
	$(DOCKER_COMPOSE_GPU) logs -f

logs-api: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ API
	$(DOCKER_COMPOSE) logs -f audio-processor

logs-worker: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Worker
	$(DOCKER_COMPOSE) logs -f audio-worker

logs-redis: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Redis
	$(DOCKER_COMPOSE) logs -f redis

logs-minio: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ MinIO
	$(DOCKER_COMPOSE) logs -f minio

# ===== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ =====
test-docker: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –≤ Docker
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ Docker..."
	$(DOCKER_COMPOSE) exec audio-processor python -m pytest src/tests/ -v

test-docker-basic: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã –≤ Docker
	@echo "üß™ –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤ –≤ Docker..."
	$(DOCKER_COMPOSE) exec audio-processor python -m pytest src/tests/test_basic.py -v

# ===== –û—á–∏—Å—Ç–∫–∞ =====
clean: ## –û—á–∏—Å—Ç–∏—Ç—å Docker —Ä–µ—Å—É—Ä—Å—ã
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
	$(DOCKER_COMPOSE) down -v --remove-orphans
	$(DOCKER_COMPOSE_GPU) down -v --remove-orphans
	docker system prune -f

clean-images: ## –£–¥–∞–ª–∏—Ç—å –æ–±—Ä–∞–∑—ã
	@echo "üßπ –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤..."
	docker rmi $(IMAGE_NAME):$(TAG) 2>/dev/null || true
	docker rmi $(IMAGE_NAME)-gpu:$(TAG) 2>/dev/null || true

clean-all: clean clean-images ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞

# ===== –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ =====
status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
	$(DOCKER_COMPOSE) ps

status-gpu: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å GPU —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å GPU —Å–µ—Ä–≤–∏—Å–æ–≤:"
	$(DOCKER_COMPOSE_GPU) ps

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤:"
	@curl -s http://localhost:8000/health | jq . || echo "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@curl -s http://localhost:5555 | grep -q "Flower" && echo "Flower –¥–æ—Å—Ç—É–ø–µ–Ω" || echo "Flower –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@curl -s http://localhost:9090 | grep -q "Prometheus" && echo "Prometheus –¥–æ—Å—Ç—É–ø–µ–Ω" || echo "Prometheus –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@curl -s http://localhost:3000 | grep -q "Grafana" && echo "Grafana –¥–æ—Å—Ç—É–ø–µ–Ω" || echo "Grafana –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

# ===== –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ =====
shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É API
	$(DOCKER_COMPOSE) exec audio-processor bash

shell-worker: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É Worker
	$(DOCKER_COMPOSE) exec audio-worker bash

shell-gpu: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ GPU –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É
	$(DOCKER_COMPOSE_GPU) exec audio-processor bash

# ===== –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ =====
restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å CPU –≤–µ—Ä—Å–∏—é
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ CPU –≤–µ—Ä—Å–∏–∏..."
	$(DOCKER_COMPOSE) restart

restart-gpu: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å GPU –≤–µ—Ä—Å–∏—é
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ GPU –≤–µ—Ä—Å–∏–∏..."
	$(DOCKER_COMPOSE_GPU) restart

restart-api: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ API
	$(DOCKER_COMPOSE) restart audio-processor

restart-worker: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ Worker
	$(DOCKER_COMPOSE) restart audio-worker

# ===== –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ =====
scale-worker: ## –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å Worker (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make scale-worker REPLICAS=3)
	@echo "üìà –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ Worker –¥–æ $(REPLICAS) —Ä–µ–ø–ª–∏–∫..."
	$(DOCKER_COMPOSE) up -d --scale audio-worker=$(REPLICAS)

# ===== –ë—ç–∫–∞–ø –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ =====
backup: ## –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –¥–∞–Ω–Ω—ã—Ö
	@echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞..."
	mkdir -p backups
	$(DOCKER_COMPOSE) exec redis redis-cli BGSAVE
	$(DOCKER_COMPOSE) exec minio mc mirror /data backups/minio-$(shell date +%Y%m%d_%H%M%S)

# ===== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è =====
info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
	@echo "‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:"
	@echo "Docker –≤–µ—Ä—Å–∏—è: $$(docker --version)"
	@echo "Docker Compose –≤–µ—Ä—Å–∏—è: $$(docker-compose --version)"
	@echo "GPU –ø–æ–¥–¥–µ—Ä–∂–∫–∞: $$(docker run --rm --gpus all nvidia/cuda:12.1-base-ubuntu22.04 nvidia-smi --query-gpu=name --format=csv,noheader 2>/dev/null || echo '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞')"
	@echo "–î–æ—Å—Ç—É–ø–Ω–∞—è –ø–∞–º—è—Ç—å: $$(docker system df)"
