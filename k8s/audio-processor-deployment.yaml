apiVersion: apps/v1
kind: Deployment
metadata:
  name: audio-processor
  namespace: ml-service
  labels:
    app.kubernetes.io/name: audio-processor
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: ml-service
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: audio-processor
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: audio-processor
        app.kubernetes.io/component: api
        app.kubernetes.io/part-of: ml-service
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ml-service-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: audio-processor
        image: audio-processor:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 8001
          protocol: TCP
        env:
        # Configuration from ConfigMap
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: REDIS_URL
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: CELERY_RESULT_BACKEND
        - name: S3_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: S3_ENDPOINT
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: S3_BUCKET
        - name: S3_REGION
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: S3_REGION
        - name: MASTERML_URL
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: MASTERML_URL
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: API_HOST
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: API_PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: LOG_FORMAT
        - name: PROMETHEUS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: PROMETHEUS_ENABLED
        - name: METRICS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: METRICS_ENABLED
        # Audio processor specific configuration
        - name: EXTRACTORS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: EXTRACTORS_ENABLED
        - name: MAX_FILE_SIZE_MB
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: MAX_FILE_SIZE_MB
        - name: SUPPORTED_FORMATS
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: SUPPORTED_FORMATS
        # Secrets
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: ml-service-secrets
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ml-service-secrets
              key: S3_SECRET_KEY
        - name: MASTERML_TOKEN
          valueFrom:
            secretKeyRef:
              name: ml-service-secrets
              key: MASTERML_TOKEN
        - name: HUGGINGFACE_TOKEN
          valueFrom:
            secretKeyRef:
              name: ml-service-secrets
              key: HUGGINGFACE_TOKEN
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
            ephemeral-storage: 2Gi
          limits:
            cpu: 1000m
            memory: 2Gi
            ephemeral-storage: 4Gi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - audio-processor
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: audio-processor-service
  namespace: ml-service
  labels:
    app.kubernetes.io/name: audio-processor
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: ml-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 8001
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: audio-processor
    app.kubernetes.io/component: api
