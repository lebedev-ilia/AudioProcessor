apiVersion: apps/v1
kind: Deployment
metadata:
  name: audio-worker
  namespace: ml-service
  labels:
    app.kubernetes.io/name: audio-worker
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: ml-service
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: audio-worker
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: audio-worker
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: ml-service
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ml-service-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: audio-worker
        image: audio-processor:latest
        imagePullPolicy: IfNotPresent
        command: ["celery"]
        args: 
          - "-A"
          - "src.celery_app"
          - "worker"
          - "--loglevel=info"
          - "--queues=audio_queue"
          - "--concurrency=4"
          - "--max-tasks-per-child=100"
          - "--time-limit=3600"
          - "--soft-time-limit=3300"
        ports:
        - name: metrics
          containerPort: 8000
          protocol: TCP
        env:
        # Configuration from ConfigMap
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: REDIS_URL
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: CELERY_RESULT_BACKEND
        - name: S3_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: S3_ENDPOINT
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: S3_BUCKET
        - name: S3_REGION
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: S3_REGION
        - name: MASTERML_URL
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: MASTERML_URL
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: LOG_FORMAT
        - name: CELERY_WORKER_CONCURRENCY
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: CELERY_WORKER_CONCURRENCY
        - name: CELERY_TASK_TIME_LIMIT
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: CELERY_TASK_TIME_LIMIT
        - name: CELERY_TASK_SOFT_TIME_LIMIT
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: CELERY_TASK_SOFT_TIME_LIMIT
        # Audio processing configuration
        - name: AUDIO_SAMPLE_RATE
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: AUDIO_SAMPLE_RATE
        - name: AUDIO_MAX_DURATION
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: AUDIO_MAX_DURATION
        - name: AUDIO_CHUNK_SIZE
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: AUDIO_CHUNK_SIZE
        # Extractor configuration
        - name: EXTRACTORS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: EXTRACTORS_ENABLED
        - name: EXTRACTORS_DISABLED
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: EXTRACTORS_DISABLED
        - name: CLAP_MODEL_NAME
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: CLAP_MODEL_NAME
        - name: CLAP_BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: CLAP_BATCH_SIZE
        - name: VAD_ENERGY_THRESHOLD
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: VAD_ENERGY_THRESHOLD
        - name: VAD_SILENCE_DURATION
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: VAD_SILENCE_DURATION
        - name: LOUDNESS_TARGET_LUFS
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: LOUDNESS_TARGET_LUFS
        - name: LOUDNESS_TRUE_PEAK
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: LOUDNESS_TRUE_PEAK
        - name: MAX_FILE_SIZE_MB
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: MAX_FILE_SIZE_MB
        - name: SUPPORTED_FORMATS
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: SUPPORTED_FORMATS
        - name: MAX_RETRIES
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: MAX_RETRIES
        - name: RETRY_DELAY
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: RETRY_DELAY
        - name: RETRY_BACKOFF
          valueFrom:
            configMapKeyRef:
              name: audio-processor-config
              key: RETRY_BACKOFF
        # Secrets
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: ml-service-secrets
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ml-service-secrets
              key: S3_SECRET_KEY
        - name: MASTERML_TOKEN
          valueFrom:
            secretKeyRef:
              name: ml-service-secrets
              key: MASTERML_TOKEN
        - name: HUGGINGFACE_TOKEN
          valueFrom:
            secretKeyRef:
              name: ml-service-secrets
              key: HUGGINGFACE_TOKEN
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
            ephemeral-storage: 4Gi
          limits:
            cpu: 2000m
            memory: 4Gi
            ephemeral-storage: 8Gi
        livenessProbe:
          exec:
            command:
            - celery
            - "-A"
            - "src.celery_app"
            - "inspect"
            - "ping"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - celery
            - "-A"
            - "src.celery_app"
            - "inspect"
            - "ping"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          exec:
            command:
            - celery
            - "-A"
            - "src.celery_app"
            - "inspect"
            - "ping"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # Celery needs write access for temp files
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        - name: models
          mountPath: /app/models
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      - name: models
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - audio-worker
              topologyKey: kubernetes.io/hostname
---
# GPU Worker Deployment for heavy extractors (CLAP, ASR, etc.)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audio-gpu-worker
  namespace: ml-service
  labels:
    app.kubernetes.io/name: audio-gpu-worker
    app.kubernetes.io/component: gpu-worker
    app.kubernetes.io/part-of: ml-service
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: audio-gpu-worker
      app.kubernetes.io/component: gpu-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: audio-gpu-worker
        app.kubernetes.io/component: gpu-worker
        app.kubernetes.io/part-of: ml-service
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ml-service-sa
      nodeSelector:
        accelerator: nvidia-tesla-gpu
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: audio-gpu-worker
        image: audio-processor:gpu
        imagePullPolicy: IfNotPresent
        command: ["celery"]
        args: 
          - "-A"
          - "src.celery_app"
          - "worker"
          - "--loglevel=info"
          - "--queues=gpu_queue"
          - "--concurrency=2"
          - "--max-tasks-per-child=50"
          - "--time-limit=7200"
          - "--soft-time-limit=6900"
        ports:
        - name: metrics
          containerPort: 8000
          protocol: TCP
        env:
        # Same environment variables as regular worker
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: REDIS_URL
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: CELERY_RESULT_BACKEND
        - name: S3_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: S3_ENDPOINT
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: S3_BUCKET
        - name: S3_REGION
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: S3_REGION
        - name: MASTERML_URL
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: MASTERML_URL
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: ml-service-config
              key: LOG_FORMAT
        # GPU specific configuration
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: CUDA_DEVICE_ORDER
          value: "PCI_BUS_ID"
        - name: TORCH_CUDA_ALLOC_CONF
          value: "max_split_size_mb:512"
        # All other environment variables from regular worker...
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: ml-service-secrets
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ml-service-secrets
              key: S3_SECRET_KEY
        - name: MASTERML_TOKEN
          valueFrom:
            secretKeyRef:
              name: ml-service-secrets
              key: MASTERML_TOKEN
        - name: HUGGINGFACE_TOKEN
          valueFrom:
            secretKeyRef:
              name: ml-service-secrets
              key: HUGGINGFACE_TOKEN
        resources:
          requests:
            nvidia.com/gpu: 1
            cpu: 2000m
            memory: 8Gi
            ephemeral-storage: 8Gi
          limits:
            nvidia.com/gpu: 1
            cpu: 4000m
            memory: 16Gi
            ephemeral-storage: 16Gi
        livenessProbe:
          exec:
            command:
            - celery
            - "-A"
            - "src.celery_app"
            - "inspect"
            - "ping"
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 15
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - celery
            - "-A"
            - "src.celery_app"
            - "inspect"
            - "ping"
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 3
        startupProbe:
          exec:
            command:
            - celery
            - "-A"
            - "src.celery_app"
            - "inspect"
            - "ping"
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 15
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        - name: models
          mountPath: /app/models
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      - name: models
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 120
      dnsPolicy: ClusterFirst
